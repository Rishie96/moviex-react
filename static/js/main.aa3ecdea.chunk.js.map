{"version":3,"sources":["VideoPlayer.js","Home.js","Films.js","Series.js","App.js","serviceWorker.js","index.js"],"names":["VideoPlayer","renderVideo","video","_this","props","react_default","a","createElement","title","src","trailer_url","className","rating","description","alt","thumbnail","release_date","cast","map","key","concat","id","this","Component","Home","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderFilms","films","film","onClick","setState","scrollToVideoPlayer","renderSeries","series","serie","ServiceWorkerRegistration","state","VideoPlayer_VideoPlayer","ref","style","marginLeft","Films","onKeyUpHandler","event","filter","target","value","toLowerCase","includes","onFilmChange","videoPlayer","React","createRef","onKeyUp","type","placeholder","Series","onSerieChange","App","document","getElementById","scrollIntoView","_this2","fetch","then","response","json","resData","Math","round","random","_this3","react_router_dom","textDecoration","color","to","react_router","exact","path","component","Home_Home","Films_Films","Series_Series","Boolean","window","location","hostname","match","ReactDOM","render","App_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8QAEqBA,6MAEjBC,YAAc,WACV,IAAIC,EAAQC,EAAKC,MAAMF,MACvB,OAAIA,EAGAG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQC,MAAON,EAAMM,MAAOC,IAAKP,EAAMQ,cACvCL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,oBACVT,EAAMM,MADX,KACoBN,EAAMU,OAD1B,KAGAP,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACdT,EAAMW,aAEPR,EAAAC,EAAAC,cAAA,OAAKO,IAAKZ,EAAMM,MAAOG,UAAU,uBAAuBF,IAAKP,EAAMa,YACnEV,EAAAC,EAAAC,cAAA,OAAKI,UAAU,sBAAf,eACiBT,EAAMc,cAEvBX,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,mBAEIL,EAAMe,KAAKC,IAAI,SAAAD,GACX,OAAOZ,EAAAC,EAAAC,cAAA,QAAMY,IAAKF,GAAX,IAAAG,OAAsBH,EAAtB,YAnBpBZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBAAf,wFA6BX,OACIN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAeU,GAAG,gBAC5BC,KAAKrB,sBApCmBsB,aCCpBC,cAEjB,SAAAA,EAAYpB,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAH,KAAAE,IACfrB,EAAAsB,OAAAE,EAAA,EAAAF,CAAAH,KAAAG,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAP,KAAMlB,KAMV0B,YAAc,WACV,IAAIC,EAAQ5B,EAAKC,MAAM2B,MACvB,OAAIA,EAEGA,EAAMb,IAAI,SAAAc,GACb,OACI3B,EAAAC,EAAAC,cAAA,OAAKO,IAAKkB,EAAKxB,MAAOW,IAAKa,EAAKX,GAAIZ,IAAKuB,EAAKjB,UAAWJ,UAAU,YAAYsB,QAAS,WACpF9B,EAAK+B,SAAS,CAAChC,MAAO8B,IACtB7B,EAAKC,MAAM+B,2BALZ9B,EAAAC,EAAAC,cAAA,yBAVIJ,EAqBnBiC,aAAe,WACX,IAAIC,EAASlC,EAAKC,MAAMiC,OACxB,OAAIA,EAEGA,EAAOnB,IAAI,SAAAoB,GACd,OACIjC,EAAAC,EAAAC,cAAA,OAAKO,IAAKyB,0BAA0B/B,MAAOW,IAAKmB,EAAMjB,GAAIZ,IAAK6B,EAAMvB,UAAWJ,UAAU,YAAYsB,QAAS,WAC3G9B,EAAK+B,SAAS,CAAChC,MAAOoC,IACtBnC,EAAKC,MAAM+B,2BALZ9B,EAAAC,EAAAC,cAAA,yBAtBXJ,EAAKqC,MAAQ,CACTtC,MAAOC,EAAKC,MAAMF,OAHPC,wEAqCf,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkC,EAAD,CAAaC,IAAI,QAAQxC,MAAOoB,KAAKkB,MAAMtC,QAC3CG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,cACXN,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,SAAzB,SACCtB,KAAKQ,eAEVzB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eACXN,EAAAC,EAAAC,cAAA,OAAKoC,MAAO,CAACC,WAAY,SAAzB,UACCtB,KAAKc,wBAhDQb,aCAbsB,cAEjB,SAAAA,EAAYzC,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAH,KAAAuB,IACf1C,EAAAsB,OAAAE,EAAA,EAAAF,CAAAH,KAAAG,OAAAG,EAAA,EAAAH,CAAAoB,GAAAhB,KAAAP,KAAMlB,KAOV0C,eAAiB,SAACC,GACd5C,EAAK+B,SAAS,CAACc,OAAQD,EAAME,OAAOC,SATrB/C,EAYnB2B,YAAc,WACV,IAAIC,EAAQ5B,EAAKC,MAAM2B,MACnBiB,EAAS7C,EAAKqC,MAAMQ,OACxB,OAAIjB,GAEJA,EAAQA,EAAMiB,OAAO,SAAAhB,GAAI,OAAIA,EAAKxB,MAAM2C,cAAcC,SAASJ,EAAOG,kBACzDjC,IAAI,SAAAc,GACb,OACI3B,EAAAC,EAAAC,cAAA,OAAKY,IAAKa,EAAKX,IACXhB,EAAAC,EAAAC,cAAA,OAAKO,IAAKkB,EAAKxB,MAAOG,UAAU,iBAAiBF,IAAKuB,EAAKjB,UAAWkB,QAAS,kBAAM9B,EAAKC,MAAMiD,aAAarB,SAL9G3B,EAAAC,EAAAC,cAAA,2BAdXJ,EAAKmD,YAAcC,IAAMC,YACzBrD,EAAKqC,MAAQ,CACTQ,OAAQ,IAJG7C,wEA4Bf,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkC,EAAD,CAAavC,MAAOoB,KAAKlB,MAAM4B,OAC/B3B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACXN,EAAAC,EAAAC,cAAA,SAAOkD,QAASnC,KAAKwB,eAAgBY,KAAK,OAAO/C,UAAU,oBAAoBgD,YAAY,qBAC1FrC,KAAKQ,uBAnCSP,aCAdqC,cACjB,SAAAA,EAAYxD,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAH,KAAAsC,IACfzD,EAAAsB,OAAAE,EAAA,EAAAF,CAAAH,KAAAG,OAAAG,EAAA,EAAAH,CAAAmC,GAAA/B,KAAAP,KAAMlB,KAOV0C,eAAiB,SAACC,GACd5C,EAAK+B,SAAS,CAACc,OAAQD,EAAME,OAAOC,SATrB/C,EAYnBiC,aAAe,WACX,IAAIC,EAASlC,EAAKC,MAAMiC,OACpBW,EAAS7C,EAAKqC,MAAMQ,OACxB,OAAIX,GAEJA,EAASA,EAAOW,OAAO,SAAAV,GAAK,OAAIA,EAAM9B,MAAM2C,cAAcC,SAASJ,EAAOG,kBAC5DjC,IAAI,SAAAoB,GACd,OACIjC,EAAAC,EAAAC,cAAA,OAAKY,IAAKmB,EAAMjB,IACZhB,EAAAC,EAAAC,cAAA,OAAKO,IAAKyB,0BAA0B/B,MAAOG,UAAU,iBAAiBF,IAAK6B,EAAMvB,UAAWkB,QAAS,kBAAM9B,EAAKC,MAAMyD,cAAcvB,SALrIjC,EAAAC,EAAAC,cAAA,2BAdXJ,EAAKmD,YAAcC,IAAMC,YACzBrD,EAAKqC,MAAQ,CACTQ,OAAQ,IAJG7C,wEA4Bf,OACIE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkC,EAAD,CAAavC,MAAOoB,KAAKlB,MAAMkC,QAC/BjC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,mBACfN,EAAAC,EAAAC,cAAA,SAAOkD,QAASnC,KAAKwB,eAAgBY,KAAK,OAAO/C,UAAU,oBAAoBgD,YAAY,sBACtFrC,KAAKc,wBAlCUb,aCIfuC,qBAEnB,SAAAA,EAAY1D,GAAO,IAAAD,EAAA,OAAAsB,OAAAC,EAAA,EAAAD,CAAAH,KAAAwC,IACjB3D,EAAAsB,OAAAE,EAAA,EAAAF,CAAAH,KAAAG,OAAAG,EAAA,EAAAH,CAAAqC,GAAAjC,KAAAP,KAAMlB,KA4BRiD,aAAe,SAACrB,GACd7B,EAAK+B,SAAS,CAACF,SACf7B,EAAKgC,uBA/BYhC,EAkCnB0D,cAAgB,SAACvB,GACfnC,EAAK+B,SAAS,CAACI,UACfnC,EAAKgC,uBAlCLhC,EAAKqC,MAAQ,CACXT,MAAO,KACPM,OAAQ,KACRnC,MAAO,MALQC,qFAUL4D,SAASC,eAAe,gBAC9BC,6DAGY,IAAAC,EAAA5C,KAElB6C,MAAM,sCACLC,KAAK,SAAAC,GAAQ,OAAKA,EAASC,SAC3BF,KAAK,SAAAG,GACHL,EAAKhC,SAAS,CAACH,MAAOwC,EAASvC,KAAMuC,EAAQC,KAAKC,MAAM,GAAAD,KAAKE,SAJ5C,MAKjBR,EAAKhC,SAAS,CAAChC,MAAOqE,EAAQC,KAAKC,MAAM,GAAAD,KAAKE,SAL7B,QAOpBP,MAAM,sCACLC,KAAK,SAAAC,GAAQ,OAAKA,EAASC,SAC3BF,KAAK,SAAAG,GACHL,EAAKhC,SAAS,CAACG,OAAQkC,EAASjC,MAAOiC,EAAQC,KAAKC,MAAM,GAAAD,KAAKE,SAV9C,yCAwBb,IAAAC,EAAArD,KACP,OACEjB,EAAAC,EAAAC,cAAA,OAAKI,UAAU,kBACbN,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASU,GAAG,UACzBhB,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,WAGAN,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBACdN,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAMjC,MAAO,CAAEkC,eAAgB,OAAQC,MAAO,sBAAuBC,GAAG,KACtE1E,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBAAhB,SAEFN,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAMjC,MAAO,CAAEkC,eAAgB,OAAQC,MAAO,sBAAuBC,GAAG,UACtE1E,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBAAhB,UAEFN,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAMjC,MAAO,CAAEkC,eAAgB,OAAQC,MAAO,sBAAuBC,GAAG,WACtE1E,EAAAC,EAAAC,cAAA,QAAMI,UAAU,qBAAhB,aAINN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,iBACbN,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,kBACT9E,EAAAC,EAAAC,cAAC6E,EAAD,CACElF,MAAOyE,EAAKnC,MAAMtC,MAClB6B,MAAO4C,EAAKnC,MAAMT,MAClBsB,aAAcsB,EAAKtB,aACnBQ,cAAec,EAAKd,cACpBxB,OAAQsC,EAAKnC,MAAMH,OACnBF,oBAAqBwC,EAAKxC,yBAGpD9B,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAW,kBACV9E,EAAAC,EAAAC,cAAC8E,EAAD,CACEtD,MAAO4C,EAAKnC,MAAMT,MAClBC,KAAM2C,EAAKnC,MAAMR,KACjBqB,aAAcsB,EAAKtB,kBAG3ChD,EAAAC,EAAAC,cAACyE,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAW,kBACT9E,EAAAC,EAAAC,cAAC+E,EAAD,CACEjD,OAAQsC,EAAKnC,MAAMH,OACnBC,MAAOqC,EAAKnC,MAAMF,MAClBuB,cAAec,EAAKd,qBAKlDxD,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAf,oGAzFuBY,cCKbgE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxF,EAAAC,EAAAC,cAACuF,EAAD,MAAS/B,SAASC,eAAe,SD2H3C,kBAAmB+B,WACrBA,UAAUC,cAAcC,MAAM7B,KAAK,SAAA8B,GACjCA,EAAaC","file":"static/js/main.aa3ecdea.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class VideoPlayer extends Component {\r\n    \r\n    renderVideo = () => {\r\n        let video = this.props.video;\r\n        if(!video)\r\n            return <div className=\"iframe-loading\">Loading....</div>;\r\n        return (\r\n            <div>\r\n                <iframe title={video.title} src={video.trailer_url}></iframe>\r\n                <div className=\"video-desc\">\r\n                    <div className=\"video-desc-title\">\r\n                        {video.title} [{video.rating}]\r\n                    </div>\r\n                    <div className=\"video-desc-desc\">\r\n                    {video.description}\r\n                    </div>\r\n                    <img alt={video.title} className=\"video-desc-thumbnail\" src={video.thumbnail} />\r\n                    <div className=\"video-desc-release\">\r\n                        Released on {video.release_date}\r\n                    </div>\r\n                    <div className=\"video-desc-cast\">\r\n                        <b>Cast: </b>\r\n                        {\r\n                            video.cast.map(cast => {\r\n                                return <span key={cast}>{` ${cast} |`}</span>\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"video-player\" id=\"video-player\">\r\n                {this.renderVideo()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport VideoPlayer from './VideoPlayer';\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            video: this.props.video\r\n        }\r\n    }\r\n\r\n    renderFilms = () => {\r\n        let films = this.props.films;\r\n        if(!films)\r\n            return <p>Loading....</p>\r\n        return films.map(film => {\r\n            return (\r\n                <img alt={film.title} key={film.id} src={film.thumbnail} className=\"film-card\" onClick={() => {\r\n                    this.setState({video: film});\r\n                    this.props.scrollToVideoPlayer();\r\n                }} />\r\n            )\r\n        })\r\n    }\r\n\r\n    renderSeries = () => {\r\n        let series = this.props.series;\r\n        if(!series)\r\n            return <p>Loading....</p>\r\n        return series.map(serie => {\r\n            return (\r\n                <img alt={ServiceWorkerRegistration.title} key={serie.id} src={serie.thumbnail} className=\"film-card\" onClick={() => {\r\n                    this.setState({video: serie});\r\n                    this.props.scrollToVideoPlayer();\r\n                }} />\r\n            )\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <VideoPlayer ref=\"video\" video={this.state.video}/>\r\n                <div className=\"films-list\">\r\n                    <div style={{marginLeft: '0.4%'}}>FILMS</div>\r\n                    {this.renderFilms()}\r\n                </div>\r\n                <div className=\"series-list\">\r\n                    <div style={{marginLeft: '0.4%'}}>SERIES</div>\r\n                    {this.renderSeries()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport VideoPlayer from './VideoPlayer';\r\n\r\nexport default class Films extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoPlayer = React.createRef();\r\n        this.state = {\r\n            filter: ''\r\n        }\r\n    }\r\n\r\n    onKeyUpHandler = (event) => {\r\n        this.setState({filter: event.target.value});\r\n    }\r\n\r\n    renderFilms = () => {\r\n        let films = this.props.films;\r\n        let filter = this.state.filter;\r\n        if(!films)\r\n            return <div>Loading....</div>\r\n        films = films.filter(film => film.title.toLowerCase().includes(filter.toLowerCase()));\r\n        return films.map(film => {\r\n            return (\r\n                <div key={film.id}>\r\n                    <img alt={film.title} className=\"film-card-main\" src={film.thumbnail} onClick={() => this.props.onFilmChange(film)} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <VideoPlayer video={this.props.film}/>\r\n                <div className=\"films-list-main\">\r\n                    <input onKeyUp={this.onKeyUpHandler} type=\"text\" className=\"films-list-search\" placeholder=\"Search Films....\" />\r\n                    {this.renderFilms()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport VideoPlayer from './VideoPlayer';\r\n\r\nexport default class Series extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoPlayer = React.createRef();\r\n        this.state = {\r\n            filter: ''\r\n        }\r\n    }\r\n\r\n    onKeyUpHandler = (event) => {\r\n        this.setState({filter: event.target.value});\r\n    }\r\n\r\n    renderSeries = () => {\r\n        let series = this.props.series;\r\n        let filter = this.state.filter;\r\n        if(!series)\r\n            return <div>Loading....</div>\r\n        series = series.filter(serie => serie.title.toLowerCase().includes(filter.toLowerCase()));\r\n        return series.map(serie => {\r\n            return (\r\n                <div key={serie.id}>\r\n                    <img alt={ServiceWorkerRegistration.title} className=\"film-card-main\" src={serie.thumbnail} onClick={() => this.props.onSerieChange(serie)} />\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n      \r\n    render() {\r\n        return (\r\n            <div>\r\n                <VideoPlayer video={this.props.serie}/>\r\n                <div className=\"films-list-main\">\r\n                <input onKeyUp={this.onKeyUpHandler} type=\"text\" className=\"films-list-search\" placeholder=\"Search Series....\" />\r\n                    {this.renderSeries()}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport Home from './Home';\nimport Films from './Films';\nimport Series from './Series';\nimport './App.css';\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      films: null,\n      series: null,\n      video: null,\n    }\n  }\n\n  scrollToVideoPlayer() {\n    let elmnt = document.getElementById(\"video-player\");\n    elmnt.scrollIntoView(); \n  }\n\n  componentDidMount() {\n    let max = 29, min = 0;\n    fetch('https://api.myjson.com/bins/1gast9')\n    .then(response =>  response.json())\n    .then(resData => {\n       this.setState({films: resData, film: resData[Math.round(Math.random() * (max - min) + min)]});\n       this.setState({video: resData[Math.round(Math.random() * (max - min) + min)]})\n    })\n    fetch('https://api.myjson.com/bins/1f953p')\n    .then(response =>  response.json())\n    .then(resData => {\n       this.setState({series: resData, serie: resData[Math.round(Math.random() * (max - min) + min)]});    \n    });\n  }\n\n  onFilmChange = (film) => {\n    this.setState({film});\n    this.scrollToVideoPlayer();\n  }\n\n  onSerieChange = (serie) => {\n    this.setState({serie});\n    this.scrollToVideoPlayer();\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <Router>\n          <div className=\"navbar\" id=\"navbar\">\n            <span className=\"navbar-brand\">\n              Movie X\n            </span>\n            <span className=\"navbar-links\">\n              <Link style={{ textDecoration: 'none', color: 'rgb(219, 219, 219)'}} to=\"/\">\n                <span className=\"navbar-links-home\">Home</span>\n              </Link>\n              <Link style={{ textDecoration: 'none', color: 'rgb(219, 219, 219)'}} to=\"/films\">\n                <span className=\"navbar-links-home\">Films</span>\n              </Link>\n              <Link style={{ textDecoration: 'none', color: 'rgb(219, 219, 219)'}} to=\"/series\">\n                <span className=\"navbar-links-home\">Series</span>\n              </Link>\n            </span>\n          </div>\n          <hr/>        \n            <div className=\"sub-container\">\n              <Route exact path=\"/\" component={() => \n                                      <Home \n                                        video={this.state.video} \n                                        films={this.state.films} \n                                        onFilmChange={this.onFilmChange} \n                                        onSerieChange={this.onSerieChange} \n                                        series={this.state.series} \n                                        scrollToVideoPlayer={this.scrollToVideoPlayer}\n                                      />} \n              />\n              <Route path=\"/films\" component={() => \n                                    <Films \n                                      films={this.state.films} \n                                      film={this.state.film} \n                                      onFilmChange={this.onFilmChange} \n                                    />} \n              />\n              <Route path=\"/series\" component={() => \n                                      <Series \n                                        series={this.state.series} \n                                        serie={this.state.serie} \n                                        onSerieChange={this.onSerieChange} \n                                      />} \n              />\n            </div>\n          </Router>\n          <div className=\"footer-note\">{`Media source: Google/YouTube. Not intended for commercial use. May subject to copyright.`}</div>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}